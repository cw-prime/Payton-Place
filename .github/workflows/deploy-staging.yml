name: Build and Test Staging

on:
  push:
    branches:
      - develop
      - staging

jobs:
  build-and-test:
    name: Build and Test (Develop/Staging)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Build Backend
        run: |
          cd backend
          npm run build

      - name: Run Tests (if available)
        run: |
          echo "✅ Build successful for develop branch"
          echo "📦 Frontend and backend compiled successfully"
          echo "🔍 Ready to merge to main for production deployment"

      - name: Notify Success
        if: success()
        run: |
          echo "✅ Staging build successful!"
          echo "📝 This branch is ready to merge to main"
          echo "🚀 Merge to main to auto-deploy to production"

      - name: Notify Failure
        if: failure()
        run: |
          echo "❌ Staging build failed!"
          echo "Fix errors before merging to main"

  # Optional: Uncomment to auto-deploy to staging subdomain if you set one up
  # deploy-staging:
  #   name: Deploy to Staging Server
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   if: github.ref == 'refs/heads/develop'
  #
  #   steps:
  #     - name: Deploy to Staging
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         port: ${{ secrets.SERVER_PORT }}
  #         script: |
  #           echo "🚀 Deploying to staging..."
  #           # Add staging deployment commands here
  #           # Use different PM2 process name, different nginx config, etc.
